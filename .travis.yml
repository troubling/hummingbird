sudo: required

dist: trusty

language: go

go:
  - 1.8.3

install:
  - sudo apt-get -y install build-essential memcached rsync xfsprogs git-core libffi-dev python-dev liberasurecode-dev python-virtualenv curl libjerasure-dev
  - 
  - make get all
  - sudo make install
  - mkdir -p /tmp/output/bin
  - cp /usr/bin/hummingbird /tmp/output/bin
  - sudo cp -p -r aio/* /
  - find /etc/hummingbird -name "*.conf" | xargs sed -i "s/<user-name>/${USER}/"
  - sudo mkdir -p /var/run/hummingbird /var/log/hummingbird /var/cache/swift /var/cache/swift2 /var/cache/swift3 /var/cache/swift4 /srv/hb
  - sudo chown -R "${USER}" /var/run/hummingbird /var/log/hummingbird /var/cache/swift /var/cache/swift2 /var/cache/swift3 /var/cache/swift4
  - /bin/remakerings
  - 
  - go get github.com/haya14busa/goverage
  - 
  - git clone --depth 1 'https://github.com/openstack/swift.git' ~/swift
  - virtualenv ~/swift-venv
  - ~/swift-venv/bin/pip install -U pip setuptools python-subunit nose-htmloutput nose-exclude
  - ~/swift-venv/bin/pip install -r ~/swift/requirements.txt
  - ~/swift-venv/bin/pip install -r ~/swift/test-requirements.txt
  - sudo mkdir -p /etc/swift /var/run/swift
  - sudo chown -R "${USER}"  /etc/swift /var/run/swift
  - cp ~/swift/doc/saio/bin/* ~/swift-venv/bin
  - cp -p -r ~/swift/doc/saio/swift/* /etc/swift
  - cp -p /etc/hummingbird/*.ring.gz /etc/swift
  - cp -p ~/swift/test/sample.conf /etc/swift/test.conf
  - cd ~/swift; ~/swift-venv/bin/python setup.py install
  - find /etc/swift -name "*.conf" | xargs sed -i "s/<your-user-name>/${USER}/"
  - sed -i "s/eventlet_debug = true/object_post_as_copy = true/" /etc/swift/proxy-server.conf
  - printf "[swift-hash]\nswift_hash_path_prefix = changeme\nswift_hash_path_suffix = changeme\n" > /etc/swift/swift.conf

script:
  - test -z "$(find . -name '*.go' | xargs gofmt -l -s)" || (echo "You need to run 'make fmt'"; exit 1)
  - go vet github.com/troubling/hummingbird/...
  - goverage -coverprofile=/tmp/coverage.out github.com/troubling/hummingbird/...
  - go tool cover -html=/tmp/coverage.out -o "/tmp/output/coverage.html"
  - 
  - hbreset
  - hummingbird start object
  - hummingbird start container
  - hummingbird start account
  - PATH=$PATH:~/swift-venv/bin swift-init start proxy
  - PATH=$PATH:~/swift-venv/bin nosetests -e test_unicode_metadata --with-html --html-file=/tmp/output/functional_swiftproxy.html ~/swift/test/functional
  - PATH=$PATH:~/swift-venv/bin swift-init stop proxy
  - 
  - hbreset
  - hummingbird start main
  - |
      PATH=$PATH:~/swift-venv/bin nosetests --with-html --html-file=/tmp/output/functional_hbproxy.html ~/swift/test/functional \
      --exclude-test=test.functional.test_account.TestAccount.test_unicode_metadata `# violates rfc specifying 7-bit clean headers, go server rejects.` \
      --exclude-test=test.functional.test_container.TestContainer.test_unicode_metadata \
      --exclude-test=test.functional.tests.TestFile.testBadHeaders `# Go's http server returns 400 not 501 for Transfer-Encoding: gzip,chunked` \
      --exclude-test=test.functional.tests.TestFileUTF8.testBadHeaders \
      --exclude-test=test.functional.tests.TestFile.testGetResponseHeaders `# silly checking for Connection: header.  Let the server do its job.` \
      --exclude-test=test.functional.tests.TestFileUTF8.testGetResponseHeaders \
      --exclude-test=test.functional.test_slo.TestSlo.test_slo_typo_etag `# these slo fields are optional and we can't easily detect typos.` \
      --exclude-test=test.functional.test_slo.TestSlo.test_slo_typo_size \
      --exclude-test=test.functional.test_slo.TestSloUTF8.test_slo_typo_etag \
      --exclude-test=test.functional.test_slo.TestSloUTF8.test_slo_typo_size \
      `# we're not gating on this yet.` || true
  - 
  - echo "<html><body><h1>Files</h1><ul>$(for file in `find /tmp/output -type f -printf "%f\n" | sort`; do echo "<li><a href='$file'>$file</a></li>"; done)</ul></body></html>" > /tmp/output/index.html

deploy:
  skip_cleanup: true
  provider: pages
  github_token: $GITHUB_TOKEN
  local_dir: /tmp/output
  on:
    branch: master
